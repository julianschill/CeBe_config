[gcode_macro BED_MESH_AREA]

; minimum probe count
variable_min_probe_count : 5

gcode:
    {% set max_probe_point_distance = params.MAX_DISTANCE|default(25.0)|float %} ; the maximum distance between two probe points 
    {% set mesh_area_offset = params.MAX_DISTANCE|default(5.0)|float %}     ; the clearance between print area and probe area 

    {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
    {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
    {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
    {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
    {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

    {% set area_min_x = params.MIN_X|default(safe_min_x)|float %}
    {% set area_min_y = params.MIN_Y|default(safe_min_y)|float %}
    {% set area_max_x = params.MAX_X|default(safe_max_x)|float %}
    {% set area_max_y = params.MAX_Y|default(safe_max_y)|float %}

    {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|float %}
    {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|float %}

    {% set area_min_x = [area_min_x - mesh_area_offset, safe_min_x]|max  %}
    {% set area_min_y = [area_min_y - mesh_area_offset, safe_min_y]|max  %}
    {% set area_max_x = [area_max_x + mesh_area_offset, safe_max_x]|min  %}
    {% set area_max_y = [area_max_y + mesh_area_offset, safe_max_y]|min  %}

    { action_respond_info( "Start: " + area_min_x|string + "," + area_min_y|string ) }
    { action_respond_info( "End:   " + area_max_x|string + "," + area_max_y|string ) }

    {% set points_x = (((area_max_x - area_min_x) / ( 2 * max_probe_point_distance)) | int) * 2 + 1 %}
    {% set points_y = (((area_max_y - area_min_y) / ( 2* max_probe_point_distance)) | int) * 2 + 1 %}

    {% set points_x = [points_x, min_probe_count]|max  %}
    {% set points_y = [points_y, min_probe_count]|max  %}

    { action_respond_info( "Points: x:" + points_x|string + " y:" + points_y|string ) }

    {% set ref_index = (points_x * points_y / 2) | int %}
    { action_respond_info( "Reference index: " + ref_index|string) }

    BED_MESH_CALIBRATE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={points_x},{points_y} relative_reference_index={ref_index}

[gcode_macro TILT_GANTRY]
variable_resolution=0.5
gcode:
  {% set axis = params.AXIS  %}
  {% set distance = params.AMOUNT | float %}
  {% set speed=params.SPEED | default(10) %}

  {% set repeat = (distance/resolution) | abs| int %}

  {% if axis == "x" %}
    {% set d=[ distance/repeat, distance/repeat, -distance/repeat, -distance/repeat ] %}
  {% else %}
    {% set d=[ distance/repeat, -distance/repeat, -distance/repeat, distance/repeat ] %}
  {% endif %}

  {% for _ in range(repeat) %}
  
    FORCE_MOVE STEPPER=stepper_z DISTANCE={d[0]} VELOCITY={speed}
    FORCE_MOVE STEPPER=stepper_z1 DISTANCE={d[1]} VELOCITY={speed}
    FORCE_MOVE STEPPER=stepper_z2 DISTANCE={d[2]} VELOCITY={speed}
    FORCE_MOVE STEPPER=stepper_z3 DISTANCE={d[3]} VELOCITY={speed}

  {% endfor %}
