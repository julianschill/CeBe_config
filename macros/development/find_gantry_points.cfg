[gcode_macro _gp_helper]
variable_x_probe_height = 0
variable_y_probe_height = 0
variable_x_left = 0
variable_x_right = 0
variable_y_left = 0
variable_y_right = 0
variable_x_left_2 = 0
variable_x_right_2 = 0
variable_y_left_2 = 0
variable_y_right_2 = 0

gcode:

  {% if (params.CALCULATE|default(0)|int) != 0 %}
    {% set x1 = printer["gcode_macro FIND_GANTRY_POINTS"].left_probe_point %}
    {% set x2 = printer["gcode_macro FIND_GANTRY_POINTS"].right_probe_point %}
    {% set y1 = printer["gcode_macro FIND_GANTRY_POINTS"].front_probe_point %}
    {% set y2 = printer["gcode_macro FIND_GANTRY_POINTS"].back_probe_point %}
    {% set a = printer["gcode_macro FIND_GANTRY_POINTS"].tilt %}
  
    {% set m_x = (x_right - x_left) / ( x2 - x1) %}
    {% set b_x = x_left - m_x * x1 - x_probe_height %}

    {% set m_x_2 = (x_right_2 - x_left_2) / ( x2 - x1) %}
    {% set b_x_2 = x_left_2 - m_x_2 * x1 - x_probe_height %}
  
    {% set gantry_left = (-a-b_x)/m_x %}
    {% set gantry_right = (a-b_x)/m_x %}

    {% set gantry_left_2 = (a-b_x_2)/m_x_2 %}
    {% set gantry_right_2 = (-a-b_x_2)/m_x_2 %}

    {% set m_y = (y_right - y_left) / ( y2 - y1) %}
    {% set b_y = y_left - m_y * y1 - y_probe_height %}

    {% set m_y_2 = (y_right_2 - y_left_2) / ( y2 - y1) %}
    {% set b_y_2 = y_left_2 - m_y_2 * y1 - y_probe_height %}
  
    {% set gantry_front = (-a-b_y)/m_y %}
    {% set gantry_back = (a-b_y)/m_y %}

    {% set gantry_front_2 = (a-b_y_2)/m_y_2 %}
    {% set gantry_back_2 = (-a-b_y_2)/m_y_2 %}

    {% set gantry_left_avg =(gantry_left + gantry_left_2) / 2.0 %}
    {% set gantry_right_avg =(gantry_right + gantry_right_2) / 2.0 %}
    {% set gantry_front_avg =(gantry_front + gantry_front_2) / 2.0 %}
    {% set gantry_back_avg =(gantry_back + gantry_back_2) / 2.0 %}

    { action_respond_info( "gantry_corners:\n" + gantry_left|string + ", " + gantry_front|string + "\n  " + gantry_right|string + ", " + gantry_back|string  ) }
    { action_respond_info( "gantry_corners:\n" + gantry_left_2|string + ", " + gantry_front_2|string + "\n  " + gantry_right_2|string + ", " + gantry_back_2|string  ) }
    { action_respond_info( "gantry_corners:\n" + gantry_left_avg|string + ", " + gantry_front_avg|string + "\n  " + gantry_right_avg|string + ", " + gantry_back_avg|string  ) }
   
  {% else %}
    SET_GCODE_VARIABLE MACRO=_gp_helper VARIABLE={params.VARIABLE} VALUE={printer["probe"].last_z_result}
  {%endif%}
  

[gcode_macro FIND_GANTRY_POINTS]
variable_left_probe_point = 30
variable_right_probe_point = 220
variable_front_probe_point = 30
variable_back_probe_point = 220
variable_tilt = 1

gcode:
  G28
  QUAD_GANTRY_LEVEL
  G28 Z
  G0 X125 Y125 Z5 F20000
  PROBE
  G0 Z5 F2000
  _gp_helper VARIABLE=x_probe_height
  TILT_GANTRY AXIS=x AMOUNT={tilt}
  G0 X{left_probe_point} Z5 F20000
  PROBE
  G0 Z5 F2000
  _gp_helper VARIABLE=x_left
  G0 X{right_probe_point} Z5 F20000
  PROBE
  G0 Z5 F2000
  _gp_helper VARIABLE=x_right
  TILT_GANTRY AXIS=x AMOUNT={(-2)*tilt}
  G0 X{right_probe_point} Z5 F20000
  PROBE
  G0 Z5 F2000
  _gp_helper VARIABLE=x_right_2
  G0 X{left_probe_point} Z5 F20000
  PROBE
  G0 Z5 F2000
  _gp_helper VARIABLE=x_left_2
  TILT_GANTRY AXIS=x AMOUNT={tilt}

  #QUAD_GANTRY_LEVEL
  #G28 Z
  G0 X125 Y125 Z5 F20000
  PROBE
  G0 Z5 F2000
  _gp_helper VARIABLE=y_probe_height
  TILT_GANTRY AXIS=y AMOUNT={tilt}
  G0 Y{front_probe_point} Z5 F20000
  PROBE
  G0 Z5 F2000
  _gp_helper VARIABLE=y_left
  G0 Y{back_probe_point} Z5 F20000
  PROBE
  G0 Z5 F2000
  _gp_helper VARIABLE=y_right
  TILT_GANTRY AXIS=y AMOUNT={(-2)*tilt}
   G0 Y{back_probe_point} Z5 F20000
  PROBE
  G0 Z5 F2000
  _gp_helper VARIABLE=y_right_2
  G0 Y{front_probe_point} Z5 F20000
  PROBE
  G0 Z5 F2000
  _gp_helper VARIABLE=y_left_2
  TILT_GANTRY AXIS=y AMOUNT={tilt}

  _gp_helper CALCULATE=1
